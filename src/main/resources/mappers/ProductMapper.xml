<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

	<!-- 상품정보 등록 -->
	<insert id="regist" parameterType="productVO">
		INSERT INTO tbl_product VALUES(
			seq_product_code.nextval,
			#{name},
			#{high_code},
			#{low_code},
			#{price},
			0, <!-- sale_count -->
			0, <!-- grade -->
			0,<!-- wish_count -->
			#{product_comment},
			sysdate
		)
	</insert>
	
	<!-- 상품코드 조회 -->
	<select id="setCode" parameterType="String" resultType="int">
		select code from tbl_product
			where name = #{name}
	</select>
	
	<!-- 상품디테일 등록 -->
	<insert id="product_detail_regist" parameterType="productdetailVO">
		INSERT INTO
			tbl_product_detail 
		VALUES
			(seq_product_detail_no.nextval,
			#{product_code},
			#{product_color},
			#{product_size},
			#{product_stock})
	</insert>
	
	<!-- 상위카테고리 상품리스트 -->
	<select id="highCateList" resultType = "productAndFileVO">
	  SELECT * FROM(
		SELECT rownum rn, A.* FROM (
			SELECT
	          P.code, 
	          P.name, 
	          P.price, 
	          P.high_code, 
	          P.low_code, 
	          P.sale_count,
	          P.wish_count, 
	          P.product_comment, 
	          P.grade, 
	          F.fileno, 
	          F.product_code, 
	          F.thumbnail_name,
	          F.file_path, F.file_name,
	          P.reg_date,
	          SUM(D.product_stock) product_stock
			FROM 
			  tbl_product P, 
			  tbl_product_detail D,
			  tbl_product_file F
	        WHERE 1 = 1  
	        AND P.code = F.product_code
	        AND D.product_code = P.code
	        AND P.high_code = #{high_code}
	        <if test='lowCode != ""'>
			  AND low_code = #{lowCode} 
			</if>
			GROUP BY
	          P.code, 
	          P.name, 
	          P.price, 
	          P.high_code, 
	          P.low_code, 
	          P.sale_count,
	          P.wish_count, 
	          P.product_comment, 
	          P.grade, 
	          F.fileno, 
	          F.product_code, 
	          F.thumbnail_name,
	          F.file_path, 
	          F.file_name,
	          P.reg_date
	          <if test='orderByType != ""'>
  			  ORDER BY
  			  	#{orderByType}
  			  DESC
			  </if>
		) A
	  )
	WHERE rn between #{start} and #{finish}
	</select>
	
	<!--상품 코드로 정보 조회 -->
	<select id="getProduct" parameterType="int" resultType = "productVO">
	SELECT
	    p.*, pf.*
	FROM
	    tbl_product p, tbl_product_file pf
	WHERE
	    p.code = pf.product_code
	    AND code = #{code}
	</select>
	
	<!-- 상품 디테일 번호로 정보 조회 -->
	<select id="getProductDetail" resultType="productdetailVO">
	SELECT
		no, product_code, product_color, product_size, product_stock
	FROM
		tbl_product_detail
	WHERE
		no = #{product_detail_no}
	</select>
	
	<!-- 상품 코드로 디테일 정보 조회 -->
	<select id="getDetailView" parameterType="int" resultType = "productdetailVO">
	SELECT
		no, product_code, product_color, product_size, product_stock
	FROM
		tbl_product_detail
	WHERE
		product_code = #{product_code}
	</select>
	
	<!-- 해당 상품의 색상을 중복 없이 조회 -->
	<select id="getProductColor" resultType="String">
	SELECT
		distinct product_color 
	FROM
		tbl_product_detail 
	WHERE
		product_code = #{product_code}
	</select>
	
	<!-- 해당 상품 색상의 사이즈를 조회 -->
	<select id="getProductSize" resultType="productdetailVO">
	SELECT
		no, product_code, product_color, product_size, product_stock
	FROM
		tbl_product_detail
	WHERE
		product_code = #{product_code} 
		<if test="product_color != null">
			AND product_color = #{product_color}
		</if>
		<if test="product_color == null">
			AND product_color is null
		</if>
	</select>
	
	<!-- 해당 정보의 상품 디테일 번호 조회 -->
	<select id="getProductDetailNo" resultType="int">
	SELECT
		no
	FROM
		tbl_product_detail
	WHERE
		product_code = #{product_code}
		<if test="product_color != null">
			AND product_color = #{product_color}
		</if>
		<if test="product_color == null">
			AND product_color is null
		</if>
		<if test="product_size != null">
			AND product_size = #{product_size}
		</if>
		<if test="product_size == null">
			AND product_size is null
		</if>
	</select>
	
	<!-- 해당 상품 디테일의 재고 조회 -->
	<select id="getProductStock" resultType="int">
	SELECT
		product_stock
	FROM
		tbl_product_detail
	WHERE
		no = #{product_detail_no}
	</select>
	
	<!-- 색상만 존재하는 상품의 색상과 재고 조회 -->
	<select id="getProductColorAndStock" resultType="java.util.Map">
	SELECT
		product_color, product_stock
	FROM
		tbl_product_detail
	WHERE
		product_code = #{product_code}
	</select>
	
	<!-- 해당 상품의 리뷰 개수 조회 -->
	<select id="getReviewCount" resultType="int">
	SELECT
    	count(*)
	FROM
	    tbl_review r, tbl_product_detail pd
	WHERE 
	    r.product_detail_no = pd.no
	    AND pd.product_code = #{product_code}
	</select>
	
	<!-- 페이징처리하여 QnA List 조회 -->
	<select id="getListWithPaging" resultType="QnaVO">
	SELECT
	    no, member_id, product_code, title, content, reg_date, hit, ref, depth, step, pno, secret
	FROM
	    (SELECT
	    	/*+ INDEX_ASC(tbl_qna idx_answer) */
	        rownum rn, no, member_id, product_code, title, content, reg_date, hit, ref, depth, step, pno, secret
	    FROM    
	        tbl_qna
	    WHERE
	    	product_code = #{product_code}
	<![CDATA[
	        AND rownum <= #{pageNum} * #{amount})
	WHERE
	    rn > (#{pageNum} - 1) * #{amount}
	]]>
	</select>
	
	<!-- 해당 상품의 문의글 개수 조회 -->
	<select id="getQnaCount" resultType="int">
	SELECT
	    count(*)
	FROM
	    tbl_qna
	WHERE 
	    product_code = #{product_code}
	</select>
	
	<resultMap type="ReviewVO" id="reviewMap">
		<result column="no" property="no" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="reg_date" property="reg_date" />
		<result column="hit" property="hit" />
		<result column="file_path" property="file_path" />
		<result column="thumbnail_name" property="thumbnail_name" />
		<result column="recommend" property="recommend" />
		<result column="grade" property="grade" />
		<association property="member" javaType="MemberVO">
			<result column="id" property="id" />
			<result column="lev" property="level" typeHandler="LevelEnumTypeHandler" />
		</association>
		<association property="product_detail" javaType="productdetailVO">
			<result column="product_detail_no" property="no" />
			<result column="product_code" property="product_code" />
			<result column="product_color" property="product_color" />
			<result column="product_size" property="product_size" />
		</association>
	</resultMap>
	
	<!-- 상품 정보 페이지의 리뷰 조회 -->
	<select id="getReview" resultMap="reviewMap">
	<![CDATA[
	SELECT 
	    r.no, m.id, m.lev, r.title, r.content, r.reg_date, r.hit, r.recommend, r.grade,
	    pd.no as product_detail_no, pd.product_code, pd.product_color, pd.product_size, pf.file_path, pf.thumbnail_name
	FROM
	    tbl_member m, 
	    (SELECT 
	        rownum, no, member_id, title, content, reg_date, hit, product_detail_no, recommend, grade 
	     FROM
	        tbl_review
	     ORDER BY
	]]>
	        <choose>
				<when test="type == 'N'.toString()">
					no desc
				</when>
				<when test="type == 'R'.toString()">
					recommend desc
				</when>
				<when test="type == 'H'.toString()">
					grade desc
				</when>
				<when test="type == 'L'.toString()">
					grade asc
				</when>
			</choose>
	<![CDATA[
	     ) r, tbl_product_detail pd, tbl_product p, tbl_product_file pf
	WHERE
	    r.product_detail_no = pd.no
	    AND p.code = pf.product_code
	    AND m.id = r.member_id
	    AND pd.product_code = p.code
	    AND pd.product_code = #{product_code}
	    AND rownum <= #{limit}
	]]>
	</select>
	
	<!-- 추천 수 불러올 때 사용 -->
	<select id="getOriginalReview" resultMap="reviewMap">
	SELECT
		*
	FROM
		tbl_review
	WHERE
		no = #{no}
	</select>
	
	<!-- 추천수 증가 -->
	<update id="increaseRecommend">
	UPDATE 
    	tbl_review 
	SET 
	    recommend = recommend + 1
	WHERE
	    no = #{no}
	</update>
	
	<!-- 추천수 감소 -->
	<update id="decreaseRecommend">
	UPDATE 
    	tbl_review 
	SET 
	    recommend = recommend - 1
	WHERE
	    no = #{no}
	</update>
	
	<!-- 상품 전체 리스트 카운트 -->
	<select id="getProductCount" resultType = "int">
		select count(*) from tbl_product
	</select>
	<!-- 상품 전체 리스트 카운트2 -->
	<select id="getProductCount2" parameterType="map" resultType = "int">
		select count(*) from tbl_product where ${searchType} = #{keyword}
	</select>
	
	<!-- 상품 전체/검색된 리스트 -->
	<select id="getProductList" parameterType="map" resultType="productVO">
		select * from (
			select A.*, rownum as rn from tbl_product A order by code desc) 
		where rn between #{start} and #{finish}
		
	</select>
	
	<!-- 상품 검색된 리스트 -->
	<select id="getListOnSearch" parameterType="map" resultType="productVO">
		 select * from (
			select * 
			from tbl_product 
			where 
			${searchType} = (select code from tbl_high_cate
							 where name like '%'||#{keyword}||'%' or kname like '%'||#{keyword}||'%'))
		)where rownum between 1 and 10
		order by code desc
	</select>
	
	<select id="getHighCate" parameterType="int" resultType="HighCateVO">
		SELECT 
		  code, name, kname
		FROM 
		  tbl_high_cate
		WHERE 
		  code = #{high_code}
	</select>
	
	
	<!-- best3 상품 조회 -->
	<select id="getBestProduct" parameterType = "int" resultType = "productVO">
		<![CDATA[		
			select * from (select * from tbl_product 
				where high_code = #{high_code}
				order by wish_count desc, grade desc) 
			where rownum <= 3
		]]>	
		

	</select>

	<select id="getLowCate" parameterType="int" resultType="LowCateVO">
		SELECT 
		  code, high_code, name
		FROM 
		  tbl_low_cate
		WHERE 
		  high_code = #{high_code}

	</select>
	
	<select id="getSearchList" parameterType="map" resultType="productAndFileVO">
	select * from (
		select rownum as rn, A.* from  (
			select P.code, P.name, P.price, P.low_code, P.sale_count, P.wish_count,
						P.product_comment, P.grade, F.fileno, F.thumbnail_name, F.file_path,
						F.file_name from tbl_product P, tbl_product_file F
				where P.code = F.product_code and P.${searchType} like '%'||#{keyword}||'%' 
							<if test = "exceptkeyword != null and exceptkeyword != ''"> 
								and 
								P.${searchType} not like '%'||#{exceptkeyword}||'%'
							</if>
						<if test = "orderby != null and orderby != ''">
							order by P.#{orderby} desc
						</if>
						)A
				<choose>
					<when test="(lowestprice != null and lowestprice != '') and (highestprice != null and highestprice != '')">
				        <![CDATA[where P.price >= #{lowestprice} and P.price <= #{highestprice}]]> 
					</when>
					<when test="(lowestprice != null and lowestprice != '') or (highestprice == null and highestprice == '')">
						<![CDATA[where P.price >= #{lowestprice}]]> 
					</when>
					<when test="(lowestprice == null and lowestprice == '') or (highestprice != null and highestprice != '')">
				        <![CDATA[where P.price <= #{highestprice}]]> 
					</when>
				</choose>
				) where rn between #{start} and #{finish}
	</select>
	<select id="getSearchCount" parameterType="map" resultType = "int">
		select count(*) from  (
			select * from tbl_product
				where ${searchType} like '%'||#{keyword}||'%' 
							<if test = "exceptkeyword != null and exceptkeyword != ''"> 
								and 
								${searchType} not like '%'||#{exceptkeyword}||'%'
							</if>
						<if test = "orderby != null and orderby != ''">
							order by #{orderby} desc
						</if>
						)
				<choose>
					<when test="(lowestprice != null and lowestprice != '') and (highestprice != null and highestprice != '')">
				        <![CDATA[where price >= #{lowestprice} and price <= #{highestprice}]]> 
					</when>
					<when test="(lowestprice != null and lowestprice != '') or (highestprice == null and highestprice == '')">
						<![CDATA[where price >= #{lowestprice}]]> 
					</when>
					<when test="(lowestprice == null and lowestprice == '') or (highestprice != null and highestprice != '')">
				        <![CDATA[where price <= #{highestprice}]]> 
					</when>
				</choose>
	</select>
	
	<insert id="saveFile" parameterType="map">
		insert into tbl_product_file values(
			seq_product_file.nextval,
			#{product_code},
			#{thumbnail_name},
			#{file_path},
			#{file_name}
		)
		 
	</insert>
	
	<select id = "getProductFile" parameterType = "int" resultType = "productFileVO">
		select * from tbl_product_file
		where product_code = #{code}
	</select>
	
	<select id = "getProductListCount" parameterType="map" resultType = "int">
		SELECT 
		  count(*) 
		FROM 
		  tbl_product 
        WHERE 1 = 1  
        <if test='high_code != ""'>
          AND high_code = #{high_code}
        </if>
        <if test='lowCode != ""'>
		  AND low_code = #{lowCode} 
		</if>
	</select>
</mapper>







