<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="AdminMapper">
	
	<resultMap type="HighCateVO" id="highCateVo">
		<result column="code" property="code" />
		<result column="name" property="name" />
		<result column="kname" property="kname" />
	</resultMap>
	
	<resultMap type="LowCateVO" id="lowCateVo">
		<result column="code" property="code" />
		<result column="high_code" property="high_code" />
		<result column="name" property="name" />
	</resultMap>
	
	<resultMap type="MemberVO" id="memberResultMap">
		<result column="rownum" property="rownum" />
		<result column="id" property="id" />
		<result column="password" property="password" />
		<result column="pwd_confirm_q" property="pwd_confirm_q" />
		<result column="pwd_confirm_a" property="pwd_confirm_a" />
		<result column="name" property="name" />
		<result column="zipcode" property="zipcode" />
		<result column="address1" property="address1" />
		<result column="address2" property="address2" />
		<result column="tel" property="tel" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="birth" property="birth" />
		<result column="lev" property="level" typeHandler="LevelEnumTypeHandler" />
		<result column="point" property="point" />
		<result column="total" property="total" />
		<result column="join_date" property="join_date" />
	</resultMap>
	
	<select id="getPrantCategory" resultMap="highCateVo">
		SELECT 
		  code, name, kname
		FROM 
		  tbl_high_cate
		ORDER BY code ASC	
	</select>
	
	<insert id="saveParentsCategory"> 
		MERGE INTO tbl_high_cate
            USING DUAL
            ON (code = #{code})
            WHEN MATCHED THEN
                      UPDATE SET
                            name = #{name},
                            kname = #{kname}
            WHEN NOT MATCHED THEN
                      INSERT (code, name, kname) 
                                 VALUES (#{code}, #{name}, #{kname} )
	</insert>
	
	<delete id="deleteParentsCategory" parameterType="java.util.ArrayList">
		DELETE FROM tbl_high_cate WHERE code IN
		<foreach collection="list" item="codes" index="index" open="(" close=")" separator=",">
            ${codes}
        </foreach>
	</delete>
	
		
	<select id="getChildCategory" resultMap="lowCateVo">
		SELECT 
		  code, high_code, name
		FROM 
		  tbl_low_cate
		WHERE 
		  high_code = #{highCode}  
		ORDER BY code ASC	
	</select>
	
	<insert id="saveChildCategory"> 
		MERGE INTO tbl_low_cate
            USING DUAL
            ON (code = #{code})
            WHEN MATCHED THEN
                      UPDATE SET
                            name = #{name}
            WHEN NOT MATCHED THEN
                      INSERT (code, name, high_code) 
                                 VALUES (#{code}, #{name}, #{high_code} )
	</insert>
	
	<delete id="deleteChildCategory" parameterType="java.util.ArrayList">
		DELETE FROM tbl_low_cate WHERE code IN
		<foreach collection="list" item="codes" index="index" open="(" close=")" separator=",">
            ${codes}
        </foreach>
	</delete>
	
	<select id="getHighCate" parameterType="int" resultType = "String">
		select name from tbl_high_cate
			where code = #{code}
	</select>
	
	<select id="getLowCate" parameterType="int" resultType="String">
		select name from tbl_low_cate
			where code = #{code}
	</select>   
	
	<select id="getHighCateCode" parameterType="String" resultType = "int">
		select code from tbl_high_cate
			where name like '%'||#{keyword}||'%'
				or kname like '%'||#{keyword}||'%'
	</select>
	
	<select id="getLowCateCode" parameterType="String" resultType = "int">
		select code from tbl_low_cate
			where name like '%'||#{keyword}||'%'
	</select>
	
	<select id="getUser" parameterType="map" resultMap="memberResultMap">
		SELECT * FROM 
		(
			SELECT rownum as num, A.* FROM  
			(
				SELECT 
				 ROW_NUMBER() OVER (ORDER BY join_date ASC) AS rnum,
				 id,
				 name,
				 phone,
				 email,
				 lev 
				FROM
				  tbl_member 
				WHERE 1 = 1
				<if test='searchValue != "" and searchType == "id"'>
				  AND id = #{searchValue}
				</if>
				<if test='searchValue != "" and searchType == "name"'>
				  AND name = #{searchValue}
				</if>
				<if test='commValue != "" and commType == "tel"'>
				  AND tel = #{commValue}
				</if>
				<if test='commValue != "" and commType == "phone"'>
				  AND phone = #{commValue}
				</if>
				<if test='searchEmail != ""'>
				  AND email = #{searchEmail}
				</if>
				<if test='levelType != "all"'>
				  AND lev = #{levelType}
				</if>
				 ORDER BY rnum desc
			) A
		) B WHERE B.num BETWEEN #{start} AND #{finish}
	</select>
	
	<select id="getUserCount" parameterType="map" resultType="int">
		SELECT 
		  count(*)
		FROM
		  tbl_member A
		WHERE 1 = 1
		<if test='searchValue != "" and searchType == "id"'>
		  AND id = #{searchValue}
		</if>
		<if test='searchValue != "" and searchType == "name"'>
		  AND name = #{searchValue}
		</if>
		<if test='commValue != "" and commType == "tel"'>
		  AND tel = #{commValue}
		</if>
		<if test='commValue != "" and commType == "phone"'>
		  AND phone = #{commValue}
		</if>
		<if test='searchEmail != ""'>
		  AND email = #{searchEmail}
		</if>
		<if test='levelType != "all"'>
		  AND lev = #{levelType}
		</if>
	</select>
	
	<select id="getUserDetail" parameterType="String" resultMap="memberResultMap">
		SELECT
		  id, 
		  password, 
		  pwd_confirm_q, 
		  pwd_confirm_a, 
		  name,
		  zipcode,
		  address1,
		  address2, 
		  tel,
		  phone,
		  email, 
		  birth, 
		  lev, 
		  point, 
		  total, 
		  join_date
	    FROM
		  tbl_member
	    WHERE
		  id = #{id}
	</select>
	
	
	<update id="modifyUserInfo" parameterType="map">
		UPDATE
	    	tbl_member 
		SET
		    password = #{password}, pwd_confirm_q = #{pwd_confirm_q}, pwd_confirm_a = #{pwd_confirm_a}, name = #{name}, 
		    zipcode = #{zipcode}, address1 = #{address1}, address2 = #{address2}, tel = #{tel}, phone = #{phone}, email = #{email}, birth = #{birth}, point = #{point} ,lev = #{level}
		WHERE
		    id = #{id}
	</update>
	
	<select id="getOrder" parameterType="map" resultType="map">
		SELECT * FROM(
		  SELECT rownum as num, A.* FROM (
		    SELECT 
              ROW_NUMBER() OVER (ORDER BY O.order_date ASC) AS rnum,
              O.code,
              O.member_id,
		      O.recipient_name,
		      O.recipient_tel,
		      O.recipient_phone,
		      O.recipient_email,
              D.product_detail_no,
              O.order_date,
              O.pay_method,
              D.state,
              D.amount, 
              D.quantity,
              P.name,
              PD.product_color,
              PD.product_size,
              D.e_product_detail_no
            FROM
              tbl_order O
            JOIN tbl_order_detail D ON O.code = D.order_code
            JOIN tbl_product_detail PD ON D.product_detail_no = PD.NO 
            JOIN tbl_product P ON PD.product_code = P.code
		    WHERE 1 = 1
		    <if test='searchValue != "" and searchType == "id"'>
		      AND O.member_id = #{searchValue}
		    </if>
		    <if test='searchValue != "" and searchType == "name"'>
		      AND O.recipient_name = #{searchValue}
		    </if>
		    <if test='commValue != "" and commType == "tel"'>
		      AND O.recipient_tel = #{commValue}
		    </if>
		    <if test='commValue != "" and commType == "phone"'>
		      AND O.recipient_phone = #{commValue}
		    </if>
		    <if test='searchEmail != ""'>
   		      AND O.recipient_email = #{searchEmail}
		    </if>
		    <if test='startDate != "" and endDate != ""'>
   		      AND to_char(O.order_date, 'yyyy-mm-dd') BETWEEN #{startDate} AND #{endDate}
	        </if>
	        <if test='orderValue != ""'>
	          AND O.code = #{orderValue}
	        </if>
	        <if test='state != "전체 상태"'>
  		      AND D.state = #{state}
	        </if>
	        ORDER BY rnum DESC
	      ) A
	    )B
	    WHERE B.num BETWEEN #{start} AND #{finish}
	</select>
	
	<select id="getOrderCount" parameterType="map" resultType="int">
		SELECT 
		  count(*)
		FROM
  		  tbl_order O
		RIGHT OUTER JOIN tbl_order_detail D 
		ON O.code = D.order_code
		WHERE 1 = 1
		<if test='searchValue != "" and searchType == "id"'>
		  AND O.member_id = #{searchValue}
		</if>
		<if test='searchValue != "" and searchType == "name"'>
		  AND O.recipient_name = #{searchValue}
		</if>
		<if test='commValue != "" and commType == "tel"'>
		  AND O.recipient_tel = #{commValue}
		</if>
		<if test='commValue != "" and commType == "phone"'>
		  AND O.recipient_phone = #{commValue}
		</if>
		<if test='searchEmail != ""'>
		  AND O.recipient_email = #{searchEmail}
		</if>
		<if test='startDate != "" and endDate != ""'>
   		  AND to_char(O.order_date, 'yyyy-mm-dd') BETWEEN #{startDate} AND #{endDate}
	    </if>
	    <if test='orderValue != ""'>
          AND O.code = #{orderValue}
        </if>
	    <if test='state != "전체 상태"'>
		  AND D.state = #{state}
	    </if>
	</select>
	
	<select id="getOrderInfo" parameterType="map" resultType="map">
		SELECT 
           O.code,
           O.member_id,
	       O.recipient_name,
	       O.recipient_tel,
	       O.recipient_phone,
	       O.recipient_email,
           D.product_detail_no,
           O.order_date,
           O.pay_method,
           D.state,
           D.amount, 
           D.quantity,
           P.name,
           PD.product_color,
           PD.product_size,
           O.recipient_zipcode,
           O.recipient_address1,
           O.recipient_address2,
           O.recipient_tel,
           O.recipient_email,
           O.used_point,
           O.pay_method,
           O.message,
           D.e_product_detail_no,
           O.delivery_charge
        FROM
           tbl_order O
        JOIN tbl_order_detail D ON O.code = D.order_code
        JOIN tbl_product_detail PD ON D.product_detail_no = PD.NO 
        JOIN tbl_product P ON PD.product_code = P.code
	    WHERE 1 = 1
	      AND O.code = #{orderCode}
	      AND D.product_detail_no = #{productDetailNo}
	      <if test='productColor != ""'>
	      	AND PD.product_color = #{productColor}
	      </if>
	</select>
	
	<select id="getChangeInfo" parameterType="String" resultType="map">
		SELECT 
		  p.name,
		  pd.product_color, 
		  pd.product_size
        FROM 
          tbl_order_detail od,
          tbl_product_detail pd,
          tbl_product p
        WHERE 1 = 1
        AND od.e_product_detail_no = #{e_no}
        AND od.e_product_detail_no = pd.no
        AND p.code = pd.product_code
	</select>
	
	<update id="modifyShippingInfo" parameterType="map">
		UPDATE
	      tbl_order 
		SET
		  recipient_name = #{recipient_name},
		  recipient_zipcode = #{zipcode}, 
		  recipient_tel = #{recipient_tel},
		  recipient_phone = #{recipient_phone},
		  recipient_address1 = #{address1},
		  recipient_address2 = #{address2},
		  recipient_email = #{recipient_email},
		  message= #{message}
		WHERE 1 = 1
		  AND code = #{code}
	</update>
	
	<update id="modifyShippingDetailInfo" parameterType="map">
		UPDATE
	      tbl_order_detail 
		SET
		  state = #{newState}
		WHERE 1 = 1
		  AND order_code = #{code}
		  AND product_detail_no = #{p_no}
	</update>
	
	<update id="addStock" parameterType="map">
		UPDATE
		  tbl_product_detail
	    SET
	      product_stock = product_stock+1 
	    WHERE
	      no = #{p_no}
	</update>
	
	<update id="modifyProductCode" parameterType="map">
		UPDATE
		  tbl_order_detail
	    SET
	      product_detail_no = #{e_no},
	      e_product_detail_no = null 
	    WHERE 1 = 1
	      AND product_detail_no = #{p_no}
	      AND order_code = #{code}
	</update>
	
	<update id="exchangeRemoveStock" parameterType="map">
		UPDATE
		  tbl_product_detail
	    SET
	      product_stock = product_stock-1 
	    WHERE
	      no = #{e_no}
	</update>
	
	<update id="productSalesRateRemove" parameterType="map">
		MERGE 
		  INTO tbl_product P
		USING (select * from tbl_product_detail) PD
		  ON 
		  (
		   P.code = PD.product_code AND PD.NO = #{p_no}
		  )
		  
		WHEN MATCHED THEN
		  UPDATE SET  P.sale_count = P.sale_count-1
	</update>
	
	<select id="getOrderCount2" parameterType="int" resultType = "int">
		select count(*) from tbl_order_detail
			where product_detail_no = #{code}
	</select>
	
	<update id="refundComplete" parameterType="map">
		UPDATE
		  tbl_member
	    SET
	      total = total - #{refundAmount}
	      <if test=' used_point != null and used_point != 0'>
	      	,point = point + #{used_point}
	      </if>
	    WHERE
	      id = #{member_id}
	</update>
	
</mapper>
