<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.moseory.mapper.UserMapper">

	<resultMap type="MemberVO" id="memberResultMap">
		<result column="id" property="id" />
		<result column="password" property="password" />
		<result column="pwd_confirm_q" property="pwd_confirm_q" />
		<result column="pwd_confirm_a" property="pwd_confirm_a" />
		<result column="name" property="name" />
		<result column="zipcode" property="zipcode" />
		<result column="address1" property="address1" />
		<result column="address2" property="address2" />
		<result column="tel" property="tel" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="birth" property="birth" />
		<result column="lev" property="level" typeHandler="LevelEnumTypeHandler" />
		<result column="point" property="point" />
		<result column="total" property="total" />
		<result column="join_date" property="join_date" />
	</resultMap>
	
	<!-- 회원가입 -->
	<select id="getMember" resultMap="memberResultMap">
	SELECT
		id, password, pwd_confirm_q, pwd_confirm_a , name, zipcode, address1, address2, 
		tel, phone, email, birth, lev, point, total, join_date
	FROM
		tbl_member
	WHERE
		id = #{id}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember">
	UPDATE
    	tbl_member 
	SET
	    password = #{password}, pwd_confirm_q = #{pwd_confirm_q}, pwd_confirm_a = #{pwd_confirm_a}, name = #{name}, 
	    zipcode = #{zipcode}, address1 = #{address1}, address2 = #{address2}, tel = #{tel}, phone = #{phone}, email = #{email}, birth = #{birth}
	WHERE
	    id = #{id}
	</update>
	
	<!-- Test 회원 정보 삭제 -->
	<delete id="deleteMember">
	DELETE FROM
		tbl_member
	WHERE
		id = #{id}
	</delete>
	
	<resultMap type="WishListVO" id="wishListMap">
		<result column="id" property="member_id" />
		<collection property="products" resultMap="productMap" />
	</resultMap>
	
	<!-- List<ProductVO>를 처리하기 위한 productMap -->
	<resultMap type="ProductVO" id="productMap">
		<result property="code" column="code" />
		<result property="name" column="name" />
		<result property="price" column="price" />
		<result property="wish_count" column="wish_count" />
		<result property="file_path" column="file_path" />
	</resultMap>
	
	<!-- 관심상품 등록 -->
	<insert id="addWishList">
	INSERT INTO
		tbl_wish_list (member_id, product_code)
	VALUES
		(#{member_id}, #{product_code})
	</insert>
	
	<!-- 등록된 상품 wish_count 증가 -->
	<update id="increaseWishCount">
	UPDATE
	    tbl_product
	SET
	    wish_count = wish_count + 1
	WHERE
	    code = #{product_code}
	</update>
	
	<!-- 관심상품 삭제 -->
	<delete id="deleteWishList">
	DELETE FROM
		tbl_wish_list
	WHERE
		member_id = #{member_id} and product_code = #{product_code}
	</delete>
	
	<!-- 삭제된 상품 wish_count 감소 -->
	<update id="decreaseWishCount">
	UPDATE
	    tbl_product
	SET
	    wish_count = wish_count - 1
	WHERE
	    code = #{product_code}
	</update>
	
	<!-- 관심상품 리스트 -->
	<select id="getWishList" resultMap="wishListMap">
	SELECT
	    m.id, p.code, p.name, p.price, p.wish_count, p.file_path
	FROM
	    tbl_wish_list wl, tbl_member m, tbl_product p
	WHERE
	    wl.member_id = m.id
	    AND wl.product_code = p.code
	    AND wl.member_id = #{member_id}
	</select>
	
	<!-- 관심상품 중복 체크 -->
	<select id="checkWishList" resultType="int">
	SELECT
    	count(*)
	FROM
	    tbl_wish_list
	WHERE
	    member_id = #{member_id}
	    AND product_code = #{product_code}
    </select>
	
</mapper>


























